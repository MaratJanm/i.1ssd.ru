<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Данные диска</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f2f5;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background-color: #ffffff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        h1 {
            font-size: 24px;
            color: #333333;
            border-bottom: 2px solid #007bff;
            padding-bottom: 5px;
        }

        .table-container {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        table,
        th,
        td {
            border: 1px solid #ddd;
        }

        th,
        td {
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #f0f2f5;
        }

        .back-button {
            display: inline-block;
            padding: 10px 20px;
            margin-bottom: 20px;
            background-color: #007bff;
            color: white;
            text-decoration: none;
            border-radius: 5px;
        }

        .back-button:hover {
            background-color: #0056b3;
        }

        .loading {
            font-size: 18px;
            color: #007bff;
            text-align: center;
            margin-top: 20px;
        }

        .disk-info {
            margin-bottom: 20px;
            padding: 15px;
            background-color: #f9f9f9;
            border-radius: 8px;
            border: 1px solid #ddd;
        }

        .disk-info h2 {
            font-size: 20px;
            margin-bottom: 10px;
        }

        .disk-info ul {
            list-style-type: none;
            padding: 0;
        }

        .disk-info ul li {
            font-size: 16px;
            margin-bottom: 5px;
        }

        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }

            h1 {
                font-size: 20px;
            }

            th,
            td {
                padding: 8px;
                font-size: 12px;
            }

            .back-button {
                padding: 8px 16px;
                font-size: 14px;
            }

            .disk-info h2 {
                font-size: 18px;
            }

            .disk-info ul li {
                font-size: 14px;
            }
        }
    </style>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css">
    <script type="text/javascript" charset="utf8" src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>
</head>

<body>
    <div class="container">
        <a href="/" class="back-button">Назад</a>
        <h1 id="disk-title"></h1>
        <div class="loading" id="loading">Загрузка данных...</div>

        <!-- Секция для отображения параметров -->
        <div class="disk-info" id="disk-info" style="display: none;">
            <h2>Свежие параметры диска</h2>
            <ul id="disk-parameters"></ul>
        </div>

        <div class="table-container">
            <table id="disk-table" class="display" style="width: 100%; display: none;">
                <thead>
                    <tr>
                        <th>Время</th>
                        <th>Температура (°C)</th>
                        <th>Параметр 241</th>
                        <!-- Add more columns here if needed -->
                    </tr>
                </thead>
                <tbody id="disk-data"></tbody>
            </table>
        </div>
    </div>

    <script>
        // Получение данных о диске через API
        async function fetchDiskData(computerName, diskName) {
            try {
                const response = await fetch(`/api/disk/${computerName}/${diskName}`);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const data = await response.json();
                console.log("Fetched disk data:", data);
                return data;
            } catch (error) {
                console.error("Error fetching disk data:", error);
                return [];
            }
        }

        // Функция для получения последних данных диска
        function getLatestData(data) {
            if (data.length === 0) return {};
            const latestEntry = data[0];
            const filteredParams = {};
            for (const key in latestEntry) {
                if (latestEntry[key] !== null && latestEntry[key] !== '' && key !== 'id' && key !== 'timestamp') {
                    filteredParams[key] = latestEntry[key];
                }
            }
            return filteredParams;
        }

        // Заполнение информации о диске
        function populateDiskInfo(data) {
            const diskParameters = document.getElementById('disk-parameters');
            const latestData = getLatestData(data);
            diskParameters.innerHTML = '';
            for (const [key, value] of Object.entries(latestData)) {
                const listItem = document.createElement('li');
                listItem.textContent = `${key}: ${value}`;
                diskParameters.appendChild(listItem);
            }
            if (Object.keys(latestData).length > 0) {
                document.getElementById('disk-info').style.display = 'block';
            }
        }

        // Заполнение таблицы данными о температуре
        function populateTable(data) {
            const tableBody = document.getElementById('disk-data');
            tableBody.innerHTML = '';
            
            // Проверьте, что data является массивом
            if (Array.isArray(data)) {
                data.forEach(item => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${new Date(item.timestamp).toLocaleString()}</td>
                        <td>${item.temperature}</td>
                        <td>${item.parameter_241}</td>
                        <!-- Add more data columns here if needed -->
                    `;
                    tableBody.appendChild(row);
                });
            } else {
                console.error("Expected an array but got:", data);
            }

            // Инициализируем DataTable
            $('#disk-table').DataTable({
                order: [[0, 'desc']],
                pagingType: 'simple_numbers',
                searching: false,
                dom: 'lfrtip',
                language: {
                    paginate: {
                        first: "First",
                        last: "Last"
                    }
                }
            });
        }

        // Загрузка данных при загрузке страницы
        document.addEventListener('DOMContentLoaded', async () => {
            const pathParts = window.location.pathname.split('/');
            const computerName = decodeURIComponent(pathParts[2]);
            const diskName = decodeURIComponent(pathParts[3]);
            document.getElementById('disk-title').textContent = `Данные для диска: ${diskName} на компьютере: ${computerName}`;
            const diskData = await fetchDiskData(computerName, diskName);
            populateDiskInfo(diskData);
            populateTable(diskData);
            document.getElementById('loading').style.display = 'none';
            document.getElementById('disk-table').style.display = 'table';
        });
    </script>
</body>

</html>
